// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebServerAppFinalProject.Models;

namespace WebServerAppFinalProject.Migrations
{
    [DbContext(typeof(RecipeContext))]
    partial class RecipeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebServerAppFinalProject.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Cakes"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Cookies"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Bread"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Pies & Tarts"
                        },
                        new
                        {
                            CategoryId = 5,
                            Name = "Crips, Crumbles & Cobblers"
                        },
                        new
                        {
                            CategoryId = 6,
                            Name = "Brownies & Bars"
                        },
                        new
                        {
                            CategoryId = 7,
                            Name = "Frostings, Fillings & Jams"
                        },
                        new
                        {
                            CategoryId = 8,
                            Name = "Sweet Dough"
                        },
                        new
                        {
                            CategoryId = 9,
                            Name = "Pastry"
                        },
                        new
                        {
                            CategoryId = 10,
                            Name = "Desserts"
                        });
                });

            modelBuilder.Entity("WebServerAppFinalProject.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("Difficulty")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RecipeUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            CategoryId = 1,
                            Difficulty = 2,
                            Name = "Chocolate Cake",
                            RecipeUrl = "https://www.noracooks.com/vegan-chocolate-cake/",
                            SeasonId = 1
                        },
                        new
                        {
                            RecipeId = 2,
                            CategoryId = 2,
                            Difficulty = 1,
                            Name = "Chocolate Chip Cookies",
                            RecipeUrl = "https://www.noracooks.com/vegan-chocolate-chip-cookies/",
                            SeasonId = 1
                        },
                        new
                        {
                            RecipeId = 3,
                            CategoryId = 1,
                            Difficulty = 2,
                            Name = "Carrot Cake with Cream Cheese Icing",
                            RecipeUrl = "https://lovingitvegan.com/vegan-carrot-cake-lemon-buttercream-frosting/",
                            SeasonId = 3
                        });
                });

            modelBuilder.Entity("WebServerAppFinalProject.Models.Season", b =>
                {
                    b.Property<int>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SeasonId");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            SeasonId = 1,
                            Name = "General"
                        },
                        new
                        {
                            SeasonId = 2,
                            Name = "Year End Holidays"
                        },
                        new
                        {
                            SeasonId = 3,
                            Name = "Spring"
                        },
                        new
                        {
                            SeasonId = 4,
                            Name = "Fall & Thanksgiving"
                        },
                        new
                        {
                            SeasonId = 5,
                            Name = "Halloween"
                        },
                        new
                        {
                            SeasonId = 6,
                            Name = "Summer"
                        },
                        new
                        {
                            SeasonId = 7,
                            Name = "Valentine's Day"
                        });
                });

            modelBuilder.Entity("WebServerAppFinalProject.Models.Recipe", b =>
                {
                    b.HasOne("WebServerAppFinalProject.Models.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebServerAppFinalProject.Models.Season", "Season")
                        .WithMany("Recipes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
